server.port=8090
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:${DATABASE_TYPE:mysql}://${DATABASE_HOST:localhost}:${DATABASE_PORT:3306}/${DATABASE_NAME}?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username=${DATABASE_USER}
spring.datasource.password=${DATABASE_PASSWORD}
spring.kafka.bootstrap-servers=${VIDEOSERVICE_KAFKA_HOSTNAME}
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
videoservice.storage=${VIDEOSERVICE_STORAGE}
videoservice.properties=prod
#rappresenta la topic in cui vps rappresenta il Kafka consumer mentre vms rappresenta il Kafka producer
videoservice.kafka.vms.topic=${VIDEOSERVICE_KAFKA_VMS_TOPIC}
#rappresenta la topic in cui vms rappresenta il Kafka consumer mentre vps rappresenta il Kafka producer
videoservice.kafka.vps.topic=${VIDEOSERVICE_KAFKA_VPS_TOPIC}    